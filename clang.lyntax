-- optional: make this field optional
-- inherit: all subfields inherit properties from this field
-- compound: this field is a compound type
-- array: this field is an array
-- string: this field is a string

clang = optional inherit compound {
    output = string
    warnings = array[string]
    pedantic = number
    std = string
    optimize = number
    debug = number
    include = array[string]
    define = array[string]
    link = array[string]
    flags = array[string]
    lib = array[string]
    libpath = array[string]
}

use: [
    "functional"
]

build: [
    "clang -o "
    clang.output
    " -std="
    clang.std
    " -O"
    clang.optimize
    " -g"
    clang.debug
    functional.if  (clang.pedantic    " -pedantic")
    functional.for (clang.include     include     " -I" include)
    functional.for (clang.define      define      " -D" define)
    functional.for (clang.flags       flag        " " flag)
    functional.for (clang.lib         lib         " -l" lib)
    functional.for (clang.libpath     libpath     " -L" libpath)
    functional.for (clang.link        link        " " link)
    functional.for (clang.warnings    warning     " -W" warning)
]
