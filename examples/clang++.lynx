ClangArgs: compound {
    output: optional string
    warnings: optional list[string]
    pedantic: optional number
    std: optional string
    optimize: optional string
    debug: optional number
    include: optional list[string]
    define: optional list[string]
    link: optional list[string]
    flags: optional list[string]
    lib: optional list[string]
    libpath: optional list[string]
    files: optional list[string]
}

compile = func(what: ClangArgs) (
    runshell (
        "clang++"
        if exists what.output   (" -o " what.output)
        if exists what.std      (" -std=" what.std)
        if exists what.optimize (" -O" what.optimize)
        if exists what.debug    (if what.debug (" -g"))
        if exists what.pedantic (if what.pedantic (" -pedantic"))
        if exists what.include  (for i in what.include (" -I" i))
        if exists what.define   (for d in what.define (" -D" d))
        if exists what.flags    (for f in what.flags (" " f))
        if exists what.lib      (for l in what.lib (" -l" l))
        if exists what.libpath  (for p in what.libpath (" -L" p))
        if exists what.link     (for l in what.link (" " l))
        if exists what.warnings (for w in what.warnings (" -W" w))
        if exists what.files    (for f in what.files (" " f))
    )
)
